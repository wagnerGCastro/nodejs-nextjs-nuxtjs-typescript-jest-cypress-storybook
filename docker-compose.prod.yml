version: '3'

services:
  webserver:
    build: 
      context: ./.docker/bin/webserver
    container_name: 'nntjs-php'
    restart: 'always'
    ports:
      - ${WEBSERVER_HTTP_PORT}:80
      - ${WEBSERVER_SLS_PORT}:443
    links: 
      - postgres
    volumes: 
      - ${DOCUMENT_ROOT}:/var/www/html
      - ${PHP_INI}:/usr/local/etc/php/php.ini
      - ${VHOSTS_DIR}:/etc/apache2/sites-enabled
      - ${MYSQL_LOG_DIR}:/var/log/apache2

  server:
    build:
        context: ./.docker/bin/nodejs
        target: development-build-stage
    container_name: 'nntjs-server'
    ports:
        - "${APP_PORT:-3024}:3000"
    volumes:
        - ./packages/backend:/app
    restart: "unless-stopped"
    networks:
        - backend
    depends_on:
        - mysql
        - redis

  postgres:
    image: postgres:12.3-alpine
    # build: 
    #  context: ./.docker/bin/postgres/12/alpine
    container_name: 'nntjs-postgres'
    # privileged: true
    restart: always
    environment:
      POSTGRES_USER: nntjs
      POSTGRES_PASSWORD: nntjs
      POSTGRES_DB: nntjs
    ports:
      - ${POSTGRES_PORT}:5432
    volumes: 
      - ${POSTGRES_SQL_DATA_DIR}:/var/lib/postgresql/data
      - ${POSTGRES_SQL_LOG_DIR}:/var/log/postgresql

  mongo:
    image: mongo
    container_name: 'nntjs-mongo'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ${MONGO_DATA_DIR}:/data/db
    ports:
      - ${MONGO_PORT}:27017

  mysql:
    build: ./.docker/bin/mysql
    container_name: nntjs-mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes: 
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
      - ${MYSQL_LOG_DIR}:/var/log/mysql
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      - backend

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: 'nntjs-phpmyadmin'
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - ${PGADMIN4_DATA_DIR}:80
    volumes: 
      - /sessions

  pgadmin4:
    image: "dpage/pgadmin4"
    # build: 
    #   context: ./bin/pgadmin4
    container_name: 'nntjs-pgadmin4'
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN4_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN4_PASSWORD}
    ports:
      - ${PGADMIN4_PORT}:80
    volumes:
      - ${PGADMIN4_DATA_DIR}:/var/lib/pgadmin
    depends_on:
      - postgres

  redis:
    image: redis:latest
    container_name: 'nntjs-redis'
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ${REDIS_DATA_DIR}:/data
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  mailhog:
    image: "mailhog/mailhog:latest"
    container_name: 'nntjs-mailhog'
    ports:
      - '${MAILHOG_PORT:-1025}:1025'
      - '${MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  pgdata:
  pgadmindata:
  mongodata:
  mysqldata:
  redisdata:
